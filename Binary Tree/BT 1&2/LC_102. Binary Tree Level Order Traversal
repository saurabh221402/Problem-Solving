class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;

        if(!root)return ans;

        queue<TreeNode*> q;
        q.push(root); 

        while(!q.empty())
        {
            vector<int> v;
            int q_size=q.size();//max possible -> 1 2 4 8 ...

            while(q_size--)
            {
                TreeNode* node=q.front();
                v.push_back(node->val);
                if(node->left) 
                q.push(node->left);
                if(node->right)
                q.push(node->right);

                q.pop();
            }
            ans.push_back(v);
        }
        return ans;
    }
};

T.C : O(N)   N is number of node
S.C : O(N) for queue and O(N) for vector -> total O(2N) == O(n)
