//main solution yet to come..



//solution based on similar question
class Solution {
public:
    bool solve(TreeNode* root, int x,vector<int>& v)
    {
        if(!root)return 0;
        if(root->val==x){v.push_back(root->val);return 1;}
        bool root_left=solve(root->left,x,v);
        if(root_left){v.push_back(root->val);return 1;}
        bool root_right=solve(root->right,x,v);
        if(root_right){v.push_back(root->val);return 1;}

        return 0;
    }
    string getDirections(TreeNode* root, int p, int q) {
        vector<int> v1,v2;
        string ans="";
        solve(root,p,v1);
        solve(root,q,v2);
        reverse(v1.begin(),v1.end());
        reverse(v2.begin(),v2.end());
        int i,n1=v1.size(),n2=v2.size();
        for(i=0;i<n1&&i<n2&&(v1[i]==v2[i]);i++){}
        for(int j=n1-1;j>=i-1;j--){string x= to_string(v1[j]);ans+=x;}
        for(int j=i;j<n2;j++){string x= to_string(v2[j]);ans+=x;}
        return ans;
    }
};
