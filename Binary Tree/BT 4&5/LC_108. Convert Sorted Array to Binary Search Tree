T.C : O(N)
S.C : O(N) for n node + O(H) recusive stack 
where H is The depth of recursion is at most log2(n + 1), where n is the number of elements in the input array (nums), 
because at each level, the array size reduces by half.

class Solution {
private:
    TreeNode* solve(vector<int> v,int i,int j)
    {
        if(i>j)return NULL;
        int mid=(i+j)>>1;
        TreeNode* node =new TreeNode;
        node->val=v[mid];

        node->left=solve(v,i,mid-1);
        node->right=solve(v,mid+1,j);

        return node;
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums){
        return solve(nums,0,nums.size()-1);
    }
};
