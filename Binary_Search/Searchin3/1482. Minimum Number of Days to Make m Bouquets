class Solution {
public:
    bool check(int days,vector<int> v,int m,int k)
    {
        int c=0,temp=k;
        for(auto x:v)
        {
            if(x-days<=0)
            {
                temp--;
            }
            else
            {
                temp=k;
            }
            if(temp==0)
            {
                c++;
                temp=k;
            }
        }
        if(c>=m)return 1;
        return 0;
    }
    int minDays(vector<int>& bd, int m, int k) {
        int i=1,j=*max_element(bd.begin(),bd.end()),ans=-1;

        while(i<=j)
        {
            int mid=i+(j-i)/2;
            if(check(mid,bd,m,k))     //checkIsPossibleToMakeM_Bouquets if yes check for smaller day otherwise check for larger days
            {
                ans=mid;
                j=mid-1;
            }
            else
            {
                i=mid+1;
            }
        }
        return ans;
    }
};
