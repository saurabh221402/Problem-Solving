T.C : O(log(min(N1,N2))
S.C : O(1)

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size(),n2=nums2.size(),n=n1+n2,median=(n+1)/2;
        if(n1>n2)return findMedianSortedArrays(nums2,nums1);
        int low=0,high=n1;
        int l1,l2,r1,r2,mid1,mid2;
        while(low<=high)
        {
            //declaring variables
            mid1=(low+high)>>1,mid2=median-mid1;
            l1=l2=INT_MIN,r1=r2=INT_MAX; 
            //validating bounds
            if(mid1>0)l1=nums1[mid1-1];
            if(mid2>0)l2=nums2[mid2-1];
            if(mid1<n1)r1=nums1[mid1];
            if(mid2<n2)r2=nums2[mid2];
            //BS conditions
        if(l1<=r2 && l2<=r1)
        {
        if(n%2==0)
        return (double)(max(l1,l2)+min(r1,r2))/2.0;
        else
        return max(l1,l2);
        }
        else if(l1>r2)
        high=mid1-1;
        else
        low=mid1+1;
        }

         return -1;
    }
};
