class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int i=0,j=nums.size()-1,n=j+1;
        if(n==1)return nums[0];
        while(i<=j)
        {
            int mid=i+(j-i)/2;

        //check previous and next element to mid element if eaual return element

            if((mid==0||nums[mid]!=nums[mid-1])&& (mid==n-1 || nums[mid]!=nums[mid+1]))return nums[mid];  
            if(mid%2==1)                                      //if odd index is 1st occurence of element then the unique element present left side of mid
            {
            if(nums[mid]!=nums[mid-1])
            j=mid-1;
            else
            i=mid+1; 
            }
            else                                              //if even index is 1st occurence of an element then unique element present right side of array
            {
                if(nums[mid]!=nums[mid-1])
                i=mid+1;
                else
                j=mid-1;
            }
        }
        return 0;
    }
};
