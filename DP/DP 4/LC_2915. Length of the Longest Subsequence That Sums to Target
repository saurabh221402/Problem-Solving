Memoization:

class Solution {
private:
    int solve(vector<int>& v,int tar,int i,vector<vector<int>>& dp)
    {
        if(tar==0)return 0;
        if(i==0||tar<0)return INT_MIN;
        if(dp[i][tar]!=-1)return dp[i][tar];
        return dp[i][tar]=max(1+solve(v,tar-v[i-1],i-1,dp),solve(v,tar,i-1,dp));
    }
public:
    int lengthOfLongestSubsequence(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>> dp(n+1,vector<int> (target+1,-1));
        int ans=solve(nums,target,n,dp);
        return (ans<0)?-1:ans;
    }
};
