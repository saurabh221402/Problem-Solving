

class Solution { 
public:
    int findNumberOfLIS(vector<int>& nums) {
    int n = nums.size(),maxx=1,ans=0;

    if (n == 0) return 0; 

    vector<int> dp(n, 1),freq(n,1); 

    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < i; ++j) {
            if (nums[i] > nums[j]) { 
                if(dp[i]<dp[j]+1)
                {
                    dp[i]=dp[j]+1;
                    freq[i]=freq[j];
                }
                else if(dp[i]==dp[j]+1)
                {
                    freq[i]+=freq[j];
                }
            }
        }
        maxx=max(maxx,dp[i]);
        //cout<<maxx<<" ";
    }

    for(int i=0;i<n;i++)
    {
        cout<<freq[i]<<" ";
        if(dp[i]==maxx)ans+=freq[i];
    } 

    return ans;
    }
};
