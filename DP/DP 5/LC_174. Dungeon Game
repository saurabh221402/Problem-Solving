class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& don) {
        int n=don.size(),m=don[0].size();
        vector<vector<int>> dp(n,vector<int> (m));
        //initialisation of dp
        dp[n-1][m-1]=(don[n-1][m-1]<=0?abs(don[n-1][m-1])+1:1);
        for(int i=n-2;i>=0;i--)
        {
            if(don[i][m-1]<=0)
            {
                dp[i][m-1]=abs(don[i][m-1])+dp[i+1][m-1];
            }
            else
            {
                dp[i][m-1]=max(1,dp[i+1][m-1]-don[i][m-1]);
            }
            cout<<dp[i][m-1]<<" ";
        }

        for(int i=m-2;i>=0;i--)
        {
            if(don[n-1][i]<=0)
            {
                dp[n-1][i]=abs(don[n-1][i])+dp[n-1][i+1];
            }
            else
            {
                dp[n-1][i]=max(1,dp[n-1][i+1]-don[n-1][i]);
            }
            cout<<dp[n-1][i]<<" ";
        }
        //implementation
        for(int i=n-2;i>=0;i--)
        {
            for(int j=m-2;j>=0;j--)
            {
                if(don[i][j]<=0)
                {
                    dp[i][j]=abs(don[i][j])+min(dp[i+1][j],dp[i][j+1]);
                }
                else
                {
                    dp[i][j]=max(1,min(dp[i+1][j],dp[i][j+1])-don[i][j]);
                }
            }
        }
        return dp[0][0];
    }
};
