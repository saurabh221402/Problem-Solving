
class Solution {
public:
    void dfs(vector<vector<int>>& v,vector<int>& vis,int i){
        vis[i]=1;
        for(auto x:v[i]){if(!vis[x])dfs(v,vis,x);}
    }
    int findCircleNum(vector<vector<int>>& v) {
        int n=v.size();
        vector<int> vis(n,0);
        vector<vector<int>> adj(n, vector<int> ());
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i!=j)
                {
                    if(v[i][j])
                    adj[i].push_back(j);
                }
            }
        }
        int c=0;
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                dfs(adj,vis,i);
                c++;
            }
        }
        return c;
    }
};
