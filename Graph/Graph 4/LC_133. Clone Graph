class Solution {
private:
    map<Node*,Node*>m;
    void solve(Node* root) {
        Node* new_node=new Node(root->val);
        m[root]=new_node;
        for(auto i:root->neighbors) {
            if(m.count(i)) {
                new_node->neighbors.push_back(m[i]);
            }
            else {
                //if neighbor node is not created then first create and then add to adjencency list 
                solve(i);
                new_node->neighbors.push_back(m[i]);
            }
        }
    }
public: 
    Node* cloneGraph(Node* node) {
        if(node==NULL) return NULL;
        //map<Node*,Node*>m;
        solve(node);
        return m[node];
    }
};
