Approach: Floyd Warshell

class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int dT) {
        vector<vector<int>> adjMat(n,vector<int> (n,100000000));
        for(int i=0;i<edges.size();i++)
        {
            adjMat[edges[i][0]][edges[i][1]]=edges[i][2];
            adjMat[edges[i][1]][edges[i][0]]=edges[i][2];
        }
        for(int i=0;i<n;i++)
        {
            adjMat[i][i]=0;
        }

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                for(int k=0;k<n;k++)
                {
                    adjMat[j][k]=min(adjMat[j][i]+adjMat[i][k],adjMat[j][k]);
                }
            }
        }
        int ans,maxx=INT_MAX;
        for(int i=0;i<n;i++)
        {
            int c=0;
            for(int j=0;j<n;j++)
            {
                cout<<adjMat[i][j]<<" ";
                if(adjMat[i][j]<=dT)
                {
                    c++;
                }
            }
            if(maxx>=c)
            {
                ans=i;
                maxx=c;
            }
            cout<<endl;
        }

        return ans;
    }
};
