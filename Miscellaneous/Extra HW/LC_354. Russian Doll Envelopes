Using LCS T.C : O(n^2) lead to TLE

class Solution {
private:
    int lengthOfLIS(vector<vector<int>>& nums) {
    int n = nums.size();
    if (n == 0) return 0; 
    vector<int> dp(n, 1); 
    for (int i = 1; i < n; ++i) { 
        for (int j = 0; j < i; ++j) {
            if (nums[i][1] > nums[j][1]&&nums[i][0]!=nums[j][0]) { 
                dp[i] = max(dp[i], dp[j] + 1);
            }
        }
    }
 
    return *max_element(dp.begin(), dp.end());
}
public:
    int maxEnvelopes(vector<vector<int>>& env) {
        sort(env.begin(),env.end());
        return lengthOfLIS(env);
    }
};
