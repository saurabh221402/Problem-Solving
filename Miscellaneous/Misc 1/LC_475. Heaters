Using binary Search T.C: O(n*(log(m))

CODE:

class Solution {
private:
    int minrad(vector<int>& v,int x)
    {
        int i=0,j=v.size()-1,mid,ans1=INT_MAX,ans2=INT_MAX;
        while(i<=j)
        {
            mid=i+((j-i)>>2);
            if(v[mid]<=x)
            {
                i=mid+1;
                ans1=x-v[mid];
            }
            else
            {
                j=mid-1;
            }
        }
        i=0,j=v.size()-1;
        while(i<=j)
        {
            mid=i+((j-i)>>2);
            if(v[mid]>=x)
            {
                j=mid-1;
                ans2=v[mid]-x;
            }
            else
            {
                i=mid+1;
            }
        }
       // cout<<x<<" "<<ans1<<" "<<ans2<<" ";
        return min(ans1,ans2);
    }
public:
    int findRadius(vector<int>& houses, vector<int>& heaters) {
        sort(heaters.begin(),heaters.end());
        int n=houses.size(),ans=0; 

        for(int i=0;i<n;i++)
        {
            ans=max(ans,minrad(heaters,houses[i]));
        }

        return ans;
    }
};
